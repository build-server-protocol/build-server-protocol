name: Release
on:
  push:
    branches: [master]
    tags: ["*"]
  workflow_dispatch:
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # de-base64 the PGP_SECRET and save it as an output, making sure it's not exposed in the logs
      - id: de-base64-pgp-secret
        run: |
          echo "${{ secrets.PGP_SECRET }}" | base64 -d > pgp-secret.asc
          echo "::add-mask::$(cat pgp-secret.asc)"
          echo "::set-output name=pgp-secret::$(cat pgp-secret.asc)"
      - uses: actions/setup-java@v4
        with:
          server-id: ossrh
          server-username: MAVEN_USER
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ steps.de-base64-pgp-secret.outputs.pgp-secret }}
          gpg-passphrase: GPG_PASSPHRASE
          distribution: "temurin"
          java-version: "11"
        env:
          GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
      - name: Mount bazel cache
        uses: actions/cache@v4
        with:
          path: '/home/runner/.cache/bazel'
          key: bazel
      - name: Publish maven artifacts
        run: |
          bazel run //:publish \
            --define "maven_repo=https://oss.sonatype.org/service/local/staging/deploy/maven2" \
            --define "gpg_sign=true"
          mvn --batch-mode \
            -f bazel-bin/bsp4j/bsp4j-pom.xml \
            deploy
        env:
          GIT_DEPLOY_KEY: ${{ secrets.GIT_DEPLOY_KEY }}
          GIT_USER: build-server-protocol@build-server-protocol.github.io
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_USER: ${{ secrets.SONATYPE_USERNAME }}
